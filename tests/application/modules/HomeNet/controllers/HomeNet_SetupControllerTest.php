<?php

/**
 * Test class for HomeNet_SetupController.
 * Generated by PHPUnit on 2012-04-27 at 14:36:31.
 */
class HomeNet_SetupControllerTest extends CMS_Test_PHPUnit_ControllerTestCase {

    private $service;
    private $installer;
    private $homenetInstaller;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
       $this->installer = new Core_Installer();
        $this->installer->installTest();
        $this->installer->loginAsSuperAdmin();
        
        
        $this->bootstrap = new Zend_Application('testing', APPLICATION_PATH . '/configs/application.ini'); //
        $this->view = Zend_Registry::get('view');
     
        $this->homenetInstaller = new HomeNet_Installer();
        

        //$this->service = new Content_Model_Category_Service();
        parent::setUp();
        
        $request = $this->getRequest();
        $this->setModule('HomeNet');
        $this->setController('Setup');
    }
    
    private $wizard;
    
    protected function setupWizard($wizard, $installNode = false){
        $this->setAction('Wizard');
        $this->getRequest()->setParam('wizard', $wizard);
        $this->wizard = $wizard;

        $this->homenetInstaller->installTest(array('house','room'));
        
        $house = $this->homenetInstaller->house;
        $room = $this->homenetInstaller->room;
        
        $this->getRequest()->setParam('house', $house->id);
        $house->setSetting('wizard', $wizard);
        
        $service = new HomeNet_Model_House_Service();
        $service->update($house);
        
        if($installNode == 'controller'){
            $networkService = new  HomeNet_Model_Network_Service($house->id);
            $ip = $networkService->add(1);
            $serial = $networkService->add(2);
            
            $ipaddress = '127.0.0.1'; //localhost

            $nodeService = new HomeNet_Model_Node_Service();
            $nodeService->add(1, $house->id, $room->id,array($ip->id =>$ipaddress,$serial->id=>null),'Local Controller',null,null,1) ;
        }
        if($installNode == 'base'){

            $nodeService = new HomeNet_Model_Node_Service();
            $nodeService->add(13, $house->id, $room->id,array(),'Base Node',null,1,2) ;
        }
        if($installNode == 'remote'){

            $nodeService = new HomeNet_Model_Node_Service();
            $nodeService->add(7, $house->id, $room->id,array(),'Base Node',null,1,3) ;
        }
        
    }
    
    protected function assertWizard(){
        $this->assertACM();
        $this->assertEquals('wizard' . ucfirst($this->wizard), Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer')->getScriptAction());
    }

//indexWizard()///////////////////////////////////////////////////////////////// 
    public function testIndexAction_Welcome() {  
        $this->homenetInstaller->uninstallTest(); //this make sure the test user has no houses
        $this->setAction('Index');
        //$this->getRequest()->setParam('id', $this->contentInstaller->categorySet->test->id);
        //run
        $this->dispatch();

        $this->assertACM('welcome');
       // $this->assertContains($object->title, $this->response->outputBody());
    }

    public function testIndexAction_Continue() {
        $this->setupWizard('room'); //this adds a house to the user
         $this->setAction('index');

        //run
        $this->dispatch();

        $this->assertACM('continue');
    }
    
 //houseWizard()///////////////////////////////////////////////////////////////// 
    public function testHouseWizard_firstView() {
         $this->setAction('wizard');

        //run
        $this->dispatch();

        $this->assertACM();
    }
    public function testHouseWizard_submitInvalid() {
        $this->setAction('wizard');
        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'name' => '',
                    'description' => '',
                    'location' => '',
                    'type' => ''));
        //run
        $this->dispatch();

        $this->assertACM();
        $this->assertNotRedirect();
    }

    public function testHouseWizard_submitValid() {
        $this->setAction('wizard');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'name' => 'test',
                    'description' => 'test2',
                    'location' => 'test, USA',
                    'type' => 'house',
                    'regions' => array('1')));

        //run
        $this->dispatch();
        //echo $this->getResponse()->getBody();
        $this->assertACM();
        $this->assertRedirect();
    }
 
 //roomWizard()/////////////////////////////////////////////////////////////////   
    public function testRoomWizard_firstView() {
        $this->setupWizard('room');

        //run
        $this->dispatch();

        $this->assertWizard();
    }
    public function testRoomWizard_submitInvalid() {
        $this->setupWizard('room');
        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'name' => '',
                    'description' => '',
                    'region' => ''));
        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertNotRedirect();
    }

    public function testRoomWizard_submitValid() {
        $this->setupWizard('room');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'name' => 'test',
                    'description' => 'test2',
                    'region' => '1'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }
    
//controllerWizard()/////////////////////////////////////////////////////////////////   
    public function testControllerWizard_firstView() {
        $this->setupWizard('controller');

        //run
        $this->dispatch();

        $this->assertWizard();
    }

    public function testControllerWizard_submitValid() { //only a continue button
        $this->setupWizard('controller');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'submit' => 'submit',
                    ));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }
    
//baseWizard()/////////////////////////////////////////////////////////////////   
    public function testBaseWizard_firstView() {
        $this->setupWizard('base');

        //run
        $this->dispatch();

        $this->assertWizard();
    }
    public function testBaseWizard_submitInvalid() {
        $this->setupWizard('base', 'controller');
        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'model' => ''));
        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertNotRedirect();
    }

    public function testBaseWizard_submitValid() {
        $this->setupWizard('base', 'controller');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'model' => '13'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }
    
//baseCodeWizard()/////////////////////////////////////////////////////////////////   
    public function testBaseCodeWizard_firstView() {
        $this->setupWizard('baseCode','base');

        //run
        $this->dispatch();

        $this->assertWizard();
    }

    public function testBaseCodeWizard_submitValid() {
        $this->setupWizard('baseCode', 'base');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'submit' => 'submit'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }
    
//baseTestWizard()/////////////////////////////////////////////////////////////////   
    public function testBaseTestWizard_firstView() {
        $this->setupWizard('baseTest','base');

        //run
        $this->dispatch();

        $this->assertWizard();
    }

    public function testBaseTestWizard_submitValid() {
        $this->setupWizard('baseTest', 'base');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'submit' => 'submit'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }

//baseWizard()/////////////////////////////////////////////////////////////////   
    public function testRemoteWizard_firstView() {
        $this->setupWizard('remote');

        //run
        $this->dispatch();

        $this->assertWizard();
    }
    public function testRemoteWizard_submitInvalid() {
        $this->setupWizard('remote', 'controller');
        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'model' => ''));
        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertNotRedirect();
    }

    public function testRemoteWizard_submitValid() {
        $this->setupWizard('remote', 'controller');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'model' => '4'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }
    
//baseCodeWizard()/////////////////////////////////////////////////////////////////   
    public function testRemoteCodeWizard_firstView() {
        $this->setupWizard('remoteCode','remote');

        //run
        $this->dispatch();

        $this->assertWizard();
    }

    public function testRemoteCodeWizard_submitValid() {
        $this->setupWizard('remoteCode', 'remote');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'submit' => 'submit'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }
    
//baseTestWizard()/////////////////////////////////////////////////////////////////   
    public function testRemoteTestWizard_firstView() {
        $this->setupWizard('remoteTest','remote');

        //run
        $this->dispatch();

        $this->assertWizard();
    }

    public function testRemoteTestWizard_submitValid() {
        $this->setupWizard('remoteTest', 'remote');

        $this->getRequest()->setMethod('POST')
                ->setPost(array(
                    'submit' => 'submit'));

        //run
        $this->dispatch();

        $this->assertWizard();
        $this->assertRedirect();
    }  
//finishedWizard()/////////////////////////////////////////////////////////////////   
    public function testFinishWizard() {
        $this->setupWizard('finished');
        //run
        $this->dispatch();
        //echo $this->getResponse()->getBody();
        $this->assertWizard();
    }

    public function testTestPacketAction() {
                $this->setAction('Test-Packet');

        $this->dispatch();

        $this->assertACM();
    }

    public function testTestBaseAjaxAction() {
          $this->setAction('Test-Base-Ajax');

        $this->dispatch();

        $this->assertACM();
    }

    public function testTestLedAjaxAction() {
                $this->setAction('Test-Led-Ajax');

        $this->dispatch();

        $this->assertACM();
    }
    
    public function testTestConnectionAjaxAction() {
        $this->setAction('Test-Connection-Ajax');
        //$this->getRequest()->setHeader($key, $value)

        $this->dispatch();

        $this->assertACM();
    }

    public function testErrorAction() {
        $this->setAction('Error');

        $this->dispatch();

        $this->assertACM();
    }

    
}