<?php

/**
 * Test class for HomeNet_HouseController.
 * Generated by PHPUnit on 2012-04-27 at 14:47:32.
 */
class HomeNet_HouseControllerTest extends CMS_Test_PHPUnit_ControllerTestCase {

    private $installer;
    private $homenetInstaller;
    private $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->installer = new Core_Installer();
        $this->installer->installTest();
        $this->installer->loginAsSuperAdmin();


        $this->bootstrap = new Zend_Application('testing', APPLICATION_PATH . '/configs/application.ini'); //
        $this->view = Zend_Registry::get('view');

        $this->homenetInstaller = new HomeNet_Installer();
        $this->homenetInstaller->installTest(array('house', 'room'));
        
        $this->object = $this->homenetInstaller->house;

        //$this->service = new Content_Model_Category_Service();
        parent::setUp();
       // Zend_Controller_Front::getInstance()->
        $request = $this->getRequest();
        $this->setModule('HomeNet');
        $this->setController('House');
    }

   

////////////////////////////////////////////////////////////////////////////////////////////  
////////////////////////////////////////////////////////////////////////////////////////////    
//from service test, good use for traits once we go to 5.4    
    protected function _getTestData($seed = 0) {
        return array(
            //     'status' => 1 + $seed,
            'url' => 'my-house' . $seed,
            'name' => 'My House' . $seed,
            'description' => 'My Description' . $seed,
            'location' => 'My Location' . $seed,
            //   'gps' => "$seed, $seed",
            'type' => 'house',
                   'regions' => array(2,3),
                // 'settings' => array('key'=>'value'.$seed),
                //  'database' => $seed
        );
    }

//end
////////////////////////////////////////////////////////////////////////////////////////////  
////////////////////////////////////////////////////////////////////////////////////////////        

    protected function _getBadTestData($version = 0) {

        $array = $this->_getTestData();
        if ($version == 0) {
            $array['name'] = '';
        }
        return $array;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

//    public function testInit() {
//
//    }

    /**
     * @todo Implement testIndexAction().
     */
    public function testIndexAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAddAction().
     */
    public function testAddAction() {
//        $this->setAction('Add');
//        $this->getRequest()->setParam('house', $object->id);
//
//        //run
//        $this->dispatch();
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    public function testEditAction_firstView() {
        //setup
        $this->setAction('Edit');
        $this->getRequest()->setParam('house', $this->object->id);

        //run
        $this->dispatch();
        $this->assertACM();
        $this->assertContains($this->object->name, $this->response->outputBody()); //make sure data is in the form
        $this->assertNotRedirect();
    }

    public function testEditAction_submitInvalid() {
        //setup
        $this->setAction('Edit');
        $this->getRequest()->setParam('house', $this->object->id);
         $this->getRequest()->setMethod('POST')
                ->setPost($this->_getBadTestData());
        //run
        $this->dispatch();

        $this->assertACM();
        $this->assertNotRedirect();
    }
    
    public function testEditAction_submitValid() {
        //setup
        $this->setAction('Edit');
        $this->getRequest()->setParam('house', $this->object->id);
        $this->getRequest()->setMethod('POST')
                ->setPost($this->_getTestData(1));
        
        //run
        $this->dispatch();

        $this->assertACM();
        $this->assertRedirect();
    }

    public function testDeleteAction_firstView() {
        //setup
        $this->setAction('Delete');
        $this->getRequest()->setParam('house', $this->object->id);
        
        //show form
        $this->dispatch();

        $this->assertACM();
        $this->assertContains($this->object->name, $this->response->outputBody()); //make sure data is in the form
        $this->assertNotRedirect();
    }
    public function testDeleteAction_submitCancel() {
        //setup
        $this->setAction('Delete');
        $this->getRequest()->setParam('house', $this->object->id);
        $this->getRequest()->setMethod('POST')
                ->setPost(array('cancel' => 'cancel'));

        //run
        $this->dispatch();
       
        $this->assertACM();
        $this->assertRedirect();
    }
    public function testDeleteAction_submitDelete() {
        //setup
        $this->setAction('Delete');
        $this->getRequest()->setParam('id', $this->object->id);
        $this->getRequest()->setMethod('POST')
                ->setPost(array('confirm' => 'confirm'));

        //run
        $this->dispatch();
        
        $this->assertACM();
        $this->assertRedirect();
    }

}