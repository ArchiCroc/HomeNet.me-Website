<?php

//require_once dirname(__FILE__) . '/../../../../../../application/modules/HomeNet/models/Packet/XmlRpc.php';

/**
 * Test class for HomeNet_Model_Packet_XmlRpc.
 * Generated by PHPUnit on 2011-12-02 at 18:56:37.
 */
class HomeNet_Model_Packet_XmlRpcTest extends PHPUnit_Framework_TestCase {

    /**
     * @var HomeNet_Model_Packet_XmlRpc
     */
    protected $client;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->client = new Zend_XmlRpc_Client('http://localhost/xmlrpc.php?setenv=testing');
        
        $this->installer = new Core_Installer();
        $this->installer->installTest();

        $this->homenetInstaller = new HomeNet_Installer();
        $this->homenetInstaller->installTest(array('apikey', 'house', 'room', 'node', 'device'));
        //$this->homenetInstaller->installOptionalContent(array('device_models', 'component_models'));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    private function _getPacket() {
        $packet = new HomeNet_Model_Packet();

        $packet->apikey = $this->homenetInstaller->apikey->id;
        $packet->timestamp = new Zend_Date();
        $packet->settings = 2;
        $packet->fromNode = $this->homenetInstaller->node->address;
        $packet->toNode = 4095;
        $packet->toDevice = 0;
        //$packet->ttl = null;
        $packet->id = 55;
        return $packet;
    }

    private function _createValidObject($seed) {
        
    }

    private function _validateResult($result) {
//        $this->assertNotNull($result->id);
//        $this->assertEquals($this->homenetInstaller->house->test->id, $result->house);
//        $this->assertEquals(1, $result->node);
//        $this->assertEquals($this->homenetInstaller->deviceModel->test->id, $result->model);
//        $this->assertEquals(3, $result->position);
//        $this->assertEquals(4, $result->components);
//        $this->assertTrue(is_array($result->settings));
//        $this->assertEquals('value', $result->settings['key']);
    }

    /**
     * @todo Implement testProcess().
     */
    public function testProcess_bool() {

        $packet = $this->_getPacket();
        $packet->fromDevice = $this->homenetInstaller->device->boolean->position;
        $packet->command = HomeNet_Model_Packet::BOOLEAN;
        $packet->payload = new HomeNet_Model_Payload(true, HomeNet_Model_Payload::BOOLEAN);

        $xmlrpc = new HomeNet_Model_Packet_XmlRpc;
        $result = $xmlrpc->submit($packet->getXmlrpcPacket()->getValue());
        $this->assertEquals(true, $result);

        $result = $this->client->call('homenet.packet.submit',$packet->getXmlrpcPacket());
        $this->assertEquals(true, $result);
        
    }

    public function testProcess_byte() {

        $packet = $this->_getPacket();
        $packet->fromDevice = $this->homenetInstaller->device->byte->position;
        $packet->command = HomeNet_Model_Packet::BYTE;
        $packet->payload = new HomeNet_Model_Payload(255, HomeNet_Model_Payload::BYTE);

        $xmlrpc = new HomeNet_Model_Packet_XmlRpc;
        $result = $xmlrpc->submit($packet->getXmlrpcPacket()->getValue());
        $this->assertEquals(true, $result);
        
        $result = $this->client->call('homenet.packet.submit',$packet->getXmlrpcPacket());
        $this->assertEquals(true, $result);
    }

    public function testProcess_int() {

        $packet = $this->_getPacket();
        $packet->fromDevice = $this->homenetInstaller->device->int->position;
        $packet->command = HomeNet_Model_Packet::INT;
        $packet->payload = new HomeNet_Model_Payload(1337, HomeNet_Model_Payload::INT);

        $xmlrpc = new HomeNet_Model_Packet_XmlRpc;
        $result = $xmlrpc->submit($packet->getXmlrpcPacket()->getValue());
        $this->assertEquals(true, $result);
        
        $result = $this->client->call('homenet.packet.submit',$packet->getXmlrpcPacket());
        $this->assertEquals(true, $result);
        
        
    }

    public function testProcess_float() {

        $packet = $this->_getPacket();
        $packet->fromDevice = $this->homenetInstaller->device->float->position;
        $packet->command = HomeNet_Model_Packet::FLOAT;
        $packet->payload = new HomeNet_Model_Payload(10.101, HomeNet_Model_Payload::FLOAT);

        $xmlrpc = new HomeNet_Model_Packet_XmlRpc;
        $result = $xmlrpc->submit($packet->getXmlrpcPacket()->getValue());
        $this->assertEquals(true, $result);
        
        $result = $this->client->call('homenet.packet.submit',$packet->getXmlrpcPacket());
        $this->assertEquals(true, $result);
    }

    public function testProcess_long() {

        $packet = $this->_getPacket();
        $packet->fromDevice = $this->homenetInstaller->device->long->position;
        $packet->command = HomeNet_Model_Packet::LONG;
        $packet->payload = new HomeNet_Model_Payload(123456789, HomeNet_Model_Payload::LONG);

        $xmlrpc = new HomeNet_Model_Packet_XmlRpc;
        $result = $xmlrpc->submit($packet->getXmlrpcPacket()->getValue());
        $this->assertEquals(true, $result);
        
        $result = $this->client->call('homenet.packet.submit',$packet->getXmlrpcPacket());
        $this->assertEquals(true, $result);
    }

}